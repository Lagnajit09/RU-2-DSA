#include<stdio.h>
#include<conio.h>
#include<stdlib.h>

struct node
{
 int data;
 struct node *prev;
 struct node *next;
} *head = NULL,*ptr,*temp;

void insertAtBeginning()
{
  int item;
  ptr = (struct node *)malloc(sizeof(struct node));
  printf("Enter the data.\n");
  scanf("%d",&item);
  ptr->data = item;
  ptr->prev = NULL;
  if(head==NULL)
  {
   ptr->next = NULL;
  }
  else
  {
   head->prev=ptr;
   ptr->next=head;
  }
  head=ptr;
  printf("Node inserted successfully.\n\n");
}

void insertAtEnd()
{
 int item;
 ptr = (struct node *)malloc(sizeof(struct node));
 printf("Enter the data.\n");
 scanf("%d",&item);
 ptr->data=item;
 ptr->next=NULL;
 
 if(head==NULL)
 {
  head = ptr;
  ptr->prev = NULL;
 }
 
 else
 {
  temp = head;
  while(temp->next!=NULL)
  {
   temp = temp->next;
  }
  temp->next=ptr;
  ptr->prev=temp;
 }
 
 printf("Node inserted successfully.\n\n");
 
}

void deleteFromBeginning()
{
 if(head==NULL)
 {
  printf("Underflow\n");
  return;
 }
 temp = head;
 if(head->next==NULL)
  {
   head=NULL;
   free(temp);
  }
  else
  {
   head = head->next;
   head -> prev = NULL;
   temp->next=NULL;
   free(temp);
  }
  printf("Node deleted successfully.\n\n");
}
void deleteFromEnd()
{
 struct node *current;
 
 if(head==NULL)
 {
  printf("Underflow\n");
  return;
 }

 temp = head;
 if(head->next==NULL)
 {
   head=NULL;
   free(temp);
 }
 else
 {
   while(temp->next!=NULL)
   {
    current = temp;
    temp=temp->next;
   }
   current->next=NULL;
   temp->prev=NULL;
   free(temp);
 }
 printf("Node deleted successfully.\n\n");
}

void traverse()
{
 temp=head;
 if(head==NULL)
 {
  printf("Underflow\n");
 }
 else
 {
  while(temp!= NULL)
  {
   printf("%p\t%d\t%p\n",temp->prev,temp->data,temp->next);
   temp=temp->next;
  }
 }
}

void main()
{
 int choice;
 clrscr();
 while(1)
 {
  printf("\n1=insert at beginning.\n");
  printf("2=insert at end.\n");
  printf("3=delete from beginning.\n");
  printf("4=delete from end\n");
  printf("5=traverse\n");
  printf("6=exit\n");
  scanf("%d",&choice);
  switch(choice)
  {
   case 1:
    insertAtBeginning();
    break;
   case 2:
    insertAtEnd();
    break;
   case 3:
    deleteFromBeginning();
    break;
   case 4:
    deleteFromEnd();
    break;
   case 5:
    traverse();
    break;
   case 6:
    exit(0);
   default:
    printf("Invalid input\n");
  }
 }
 getch();
}
